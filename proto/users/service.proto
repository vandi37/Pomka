syntax = "proto3";

package users;

import "common/types.proto";
import "google/protobuf/timestamp.proto";

// option csharp_namespace = "UsersServiceApp"; // для C#
// option go_package = "./users"; // для Go

service Users {
    rpc SendTransaction (TransactionRequest) returns (TransactionResponse);
    rpc ChangeAutoBuy(Id) returns (common.Response);
    rpc Create(common.Void) returns (User);
    rpc GetUser(Id) returns (User);
    rpc GetTop(GetTopUsers) returns (RepeatedUsers);
    rpc GetAll(common.Void) returns (RepeatedUsers);
    rpc GetTransaction(Id) returns (Transaction);
    rpc GetTransactionHistory(Id) returns (TransactionHistory);
    rpc GetAllTransactions(common.Void) returns (TransactionHistory);
    rpc Farm(Id) returns (TransactionResponse);
}

enum Role {
    Blocked = 0;
    Normal = 1;
    Moderator = 2;
    Creator = 3;
}

message User {
    int64 id = 1;
    int64 credits = 2;
    int64 stocks = 3;
    Role role = 5;
    bool autoBuyEnabled = 8;
    google.protobuf.Timestamp lastFarmingAt = 9;
    google.protobuf.Timestamp createdAt = 10;
}

message Id {
    int64 id = 1;
}

message GetTopUsers {
    common.Currency currency = 1;   
}

message RepeatedUsers {
    repeated User users = 1;
}

message UserTransaction {
    int64 user_id = 1;
    int64 amount = 2;
    common.Currency currency = 3;
}

message TransactionRequest {
    optional UserTransaction sender = 1;
    optional UserTransaction receiver = 2;
    common.TransactionType type = 3;
}

message SuccessfulTransaction {
    int64 id = 1;
}

message FailedTransaction {
    common.Failure error = 1; 
    int64 transactionType = 2;
}

message TransactionResponse {
    optional SuccessfulTransaction success = 1;
    optional FailedTransaction failure = 2;
    TransactionRequest transaction = 3;
}

message Transaction {
    int64 id = 1;
    optional UserTransaction sender = 2;
    optional UserTransaction receiver = 3;
    common.TransactionType type = 4;
    google.protobuf.Timestamp createdAt = 5;
}

message TransactionHistory {
    repeated Transaction transactions = 1;
}
